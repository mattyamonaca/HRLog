{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport analizeApi from \"../api/analize\";\nimport gifApi from \"../api/gif\";\nconst initialState = {\n  user_id: \"\",\n  text: \"\",\n  time: \"\",\n  loading: false,\n  error: false\n};\nconst slice = createSlice({\n  name: \"report\",\n  initialState,\n  reducers: {\n    makeReport: (state, action) => {\n      console.log(\"post\");\n      console.log(action.payload);\n    }\n  }\n}); // Reducer\n\nexport default slice.reducer; // Actions\n\nexport const {\n  clear\n} = slice.actions;\nexport const {\n  makeReport\n} = slice.actions; // Async task\n\nexport function fetchAsync(channel) {\n  return async function (dispatch) {\n    dispatch(slice.actions.fetchStart());\n\n    try {\n      const response = await analizeApi.slack(channel);\n      console.log(response);\n      dispatch(slice.actions.fetchSucceed(response));\n    } catch (err) {\n      dispatch(slice.actions.fetchFaild(err));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/shiokawahayato/work/HRLog/src/stores/report.js"],"names":["createSlice","analizeApi","gifApi","initialState","user_id","text","time","loading","error","slice","name","reducers","makeReport","state","action","console","log","payload","reducer","clear","actions","fetchAsync","channel","dispatch","fetchStart","response","slack","fetchSucceed","err","fetchFaild"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,EADO;AAEjBC,EAAAA,IAAI,EAAG,EAFU;AAGjBC,EAAAA,IAAI,EAAG,EAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,MAAMC,KAAK,GAAGT,WAAW,CAAC;AACzBU,EAAAA,IAAI,EAAE,QADmB;AAEzBP,EAAAA,YAFyB;AAGzBQ,EAAAA,QAAQ,EAAE;AACHC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACH;AAJE;AAHe,CAAD,CAAzB,C,CAWA;;AACA,eAAeR,KAAK,CAACS,OAArB,C,CAEA;;AACA,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAYV,KAAK,CAACW,OAAxB;AACP,OAAO,MAAM;AAAER,EAAAA;AAAF,IAAiBH,KAAK,CAACW,OAA7B,C,CAEP;;AACA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAChC,SAAO,gBAAeC,QAAf,EAAyB;AACnCA,IAAAA,QAAQ,CAACd,KAAK,CAACW,OAAN,CAAcI,UAAd,EAAD,CAAR;;AAEA,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMxB,UAAU,CAACyB,KAAX,CAAiBJ,OAAjB,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACGF,MAAAA,QAAQ,CAACd,KAAK,CAACW,OAAN,CAAcO,YAAd,CAA2BF,QAA3B,CAAD,CAAR;AACH,KAJD,CAIE,OAAOG,GAAP,EAAY;AACVL,MAAAA,QAAQ,CAACd,KAAK,CAACW,OAAN,CAAcS,UAAd,CAAyBD,GAAzB,CAAD,CAAR;AACH;AACG,GAVD;AAWH","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport analizeApi from \"../api/analize\";\nimport gifApi from \"../api/gif\";\n\nconst initialState = {\n    user_id : \"\",\n    text : \"\",\n    time : \"\",\n    loading: false,\n    error: false\n};\n\nconst slice = createSlice({\n\tname: \"report\",\n\tinitialState,\n\treducers: {\n        makeReport: (state,action) => {\n            console.log(\"post\") \n            console.log(action.payload)\n        }\n\t}\n    });\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { clear } = slice.actions;\nexport const { makeReport } = slice.actions;\n\n// Async task\nexport function fetchAsync(channel) {\n    return async function(dispatch) {\n\tdispatch(slice.actions.fetchStart());\n\n\ttry {\n\t\tconst response = await analizeApi.slack(channel);\n\t\tconsole.log(response)\n\t    dispatch(slice.actions.fetchSucceed(response));\n\t} catch (err) {\n\t    dispatch(slice.actions.fetchFaild(err));\n\t}\n    };\n}"]},"metadata":{},"sourceType":"module"}