{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shiokawahayato/work/HRLog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shiokawahayato/work/HRLog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createSlice}from\"@reduxjs/toolkit\";import gifApi from\"../api/gif\";var initialState={url:\"\",loading:false,error:false};var slice=createSlice({name:\"gif\",initialState:initialState,reducers:{fetchStart:function fetchStart(state){return Object.assign({},state,{url:\"\",loading:true});},fetchSucceed:function fetchSucceed(state,action){return Object.assign({},state,{url:action.payload,loading:false});},fetchFaild:function fetchFaild(state,action){console.error(action.payload);return Object.assign({},state,{loading:false,error:true});},clear:function clear(){return{url:\"\",loading:false,error:false};}}});// Reducer\nexport default slice.reducer;// Actions\nvar clear=slice.actions.clear;// Async task\nexport{clear};export function fetchAsync(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(slice.actions.fetchStart());_context.prev=1;_context.next=4;return gifApi.random();case 4:response=_context.sent;dispatch(slice.actions.fetchSucceed(response.url));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(slice.actions.fetchFaild(_context.t0));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();}","map":{"version":3,"sources":["/Users/shiokawahayato/work/HRLog/src/stores/gif.js"],"names":["createSlice","gifApi","initialState","url","loading","error","slice","name","reducers","fetchStart","state","Object","assign","fetchSucceed","action","payload","fetchFaild","console","clear","reducer","actions","fetchAsync","dispatch","random","response"],"mappings":"2SAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,YAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,GAAG,CAAE,EADY,CAEjBC,OAAO,CAAE,KAFQ,CAGjBC,KAAK,CAAE,KAHU,CAArB,CAMA,GAAMC,CAAAA,KAAK,CAAGN,WAAW,CAAC,CACzBO,IAAI,CAAE,KADmB,CAEzBL,YAAY,CAAZA,YAFyB,CAGzBM,QAAQ,CAAE,CACNC,UAAU,CAAE,oBAAAC,KAAK,CAAI,CACxB,MAAOC,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBF,KAAlB,CAAyB,CAAEP,GAAG,CAAE,EAAP,CAAWC,OAAO,CAAE,IAApB,CAAzB,CAAP,CACI,CAHK,CAINS,YAAY,CAAE,sBAACH,KAAD,CAAQI,MAAR,CAAmB,CACpC,MAAOH,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBF,KAAlB,CAAyB,CAAEP,GAAG,CAAEW,MAAM,CAACC,OAAd,CAAuBX,OAAO,CAAE,KAAhC,CAAzB,CAAP,CACI,CANK,CAONY,UAAU,CAAE,oBAACN,KAAD,CAAQI,MAAR,CAAmB,CAClCG,OAAO,CAACZ,KAAR,CAAcS,MAAM,CAACC,OAArB,EACA,MAAOJ,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBF,KAAlB,CAAyB,CAAEN,OAAO,CAAE,KAAX,CAAkBC,KAAK,CAAE,IAAzB,CAAzB,CAAP,CACI,CAVK,CAWNa,KAAK,CAAE,gBAAM,CAChB,MAAO,CAAEf,GAAG,CAAE,EAAP,CAAWC,OAAO,CAAE,KAApB,CAA2BC,KAAK,CAAE,KAAlC,CAAP,CACI,CAbK,CAHe,CAAD,CAAzB,CAoBA;AACA,cAAeC,CAAAA,KAAK,CAACa,OAArB,CAEA;GACeD,CAAAA,K,CAAUZ,KAAK,CAACc,O,CAAhBF,K,CAEf;cACA,MAAO,SAASG,CAAAA,UAAT,EAAsB,CACzB,+FAAO,iBAAeC,QAAf,+HACVA,QAAQ,CAAChB,KAAK,CAACc,OAAN,CAAcX,UAAd,EAAD,CAAR,CADU,sCAIiBR,CAAAA,MAAM,CAACsB,MAAP,EAJjB,QAIAC,QAJA,eAKNF,QAAQ,CAAChB,KAAK,CAACc,OAAN,CAAcP,YAAd,CAA2BW,QAAQ,CAACrB,GAApC,CAAD,CAAR,CALM,+EAONmB,QAAQ,CAAChB,KAAK,CAACc,OAAN,CAAcJ,UAAd,aAAD,CAAR,CAPM,oEAAP,+DAUH","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport gifApi from \"../api/gif\";\n\nconst initialState = {\n    url: \"\",\n    loading: false,\n    error: false\n};\n\nconst slice = createSlice({\n\tname: \"gif\",\n\tinitialState,\n\treducers: {\n\t    fetchStart: state => {\n\t\treturn Object.assign({}, state, { url: \"\", loading: true });\n\t    },\n\t    fetchSucceed: (state, action) => {\n\t\treturn Object.assign({}, state, { url: action.payload, loading: false });\n\t    },\n\t    fetchFaild: (state, action) => {\n\t\tconsole.error(action.payload);\n\t\treturn Object.assign({}, state, { loading: false, error: true });\n\t    },\n\t    clear: () => {\n\t\treturn { url: \"\", loading: false, error: false };\n\t    }\n\t}\n    });\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { clear } = slice.actions;\n\n// Async task\nexport function fetchAsync() {\n    return async function(dispatch) {\n\tdispatch(slice.actions.fetchStart());\n\n\ttry {\n\t    const response = await gifApi.random();\n\t    dispatch(slice.actions.fetchSucceed(response.url));\n\t} catch (err) {\n\t    dispatch(slice.actions.fetchFaild(err));\n\t}\n    };\n}\n"]},"metadata":{},"sourceType":"module"}