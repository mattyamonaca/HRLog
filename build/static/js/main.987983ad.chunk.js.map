{"version":3,"sources":["api/gif.js","stores/gif.js","stores/index.js","components/VendingMachine.js","App.js","index.js"],"names":["slice","createSlice","name","initialState","url","loading","error","reducers","fetchStart","state","Object","assign","fetchSucceed","action","payload","fetchFaild","console","clear","actions","reducer","combineReducers","gif","gifReducer","store","configureStore","Gif","imageUrl","className","src","alt","href","VendingMachine","useSelector","dispatch","useDispatch","onClick","a","gifApi","response","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2NAEe,aAGd,MAAO,qBCIFA,EAAQC,YAAY,CACzBC,KAAM,MACNC,aARoB,CACjBC,IAAK,GACLC,SAAS,EACTC,OAAO,GAMVC,SAAU,CACNC,WAAY,SAAAC,GACf,OAAOC,OAAOC,OAAO,GAAIF,EAAO,CAAEL,IAAK,GAAIC,SAAS,KAEjDO,aAAc,SAACH,EAAOI,GACzB,OAAOH,OAAOC,OAAO,GAAIF,EAAO,CAAEL,IAAKS,EAAOC,QAAST,SAAS,KAE7DU,WAAY,SAACN,EAAOI,GAEvB,OADAG,QAAQV,MAAMO,EAAOC,SACdJ,OAAOC,OAAO,GAAIF,EAAO,CAAEJ,SAAS,EAAOC,OAAO,KAEtDW,MAAO,WACV,MAAO,CAAEb,IAAK,GAAIC,SAAS,EAAOC,OAAO,OAM5BN,IAAf,QAGeiB,EAAUjB,EAAMkB,QAAhBD,MC7Bf,IAAME,EAAUC,YAAgB,CAC/BC,IAAKC,IAKSC,EAFDC,YAAe,CAAEL,Y,MCsB/B,SAASM,EAAT,GAA4C,IAA7BC,EAA4B,EAA5BA,SAAUrB,EAAkB,EAAlBA,QACrB,OADuC,EAATC,MAE1B,uBAAGqB,UAAU,0BAAb,WAGAtB,EACA,uBAAGsB,UAAU,wBAAb,cAGCD,EAKL,gCACA,yBAAKE,IAAKF,EAAUG,IAAI,KACtB,+CACU,uBAAGC,KAAK,sBAAR,WAPR,uBAAGH,UAAU,gBAAb,YAaOI,MAjDf,WACI,IAAML,EAAWM,aAAY,SAAAvB,GAAK,OAAIA,EAAMY,IAAIjB,OAC1CC,EAAU2B,aAAY,SAAAvB,GAAK,OAAIA,EAAMY,IAAIhB,WACzCC,EAAQ0B,aAAY,SAAAvB,GAAK,OAAIA,EAAMY,IAAIf,SAEvC2B,EAAWC,cAEjB,OACA,6BACE,wBAAIP,UAAU,SAAd,+BACF,kBAACF,EAAQ,CAAEC,WAAUrB,UAASC,UAC5B,6BACA,yBAAKqB,UAAU,WACb,4BACEA,UAAU,oBAChBQ,QAAS,kBAAMF,EFkBf,uCAAO,WAAeA,GAAf,eAAAG,EAAA,6DACVH,EAASjC,EAAMkB,QAAQV,cADb,kBAIiB6B,IAJjB,OAIAC,EAJA,OAKNL,EAASjC,EAAMkB,QAAQN,aAAa0B,EAASlC,MALvC,gDAON6B,EAASjC,EAAMkB,QAAQH,WAAd,OAPH,yDAAP,yDEpBI,QAIA,4BACEY,UAAU,SAChBQ,QAAS,kBAAMF,EAAShB,OAFpB,YCROsB,MAVf,WACI,OACA,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,SCAFa,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAD,CAAUrB,MAAOA,GACf,kBAAC,EAAD,OAEFiB,K","file":"static/js/main.987983ad.chunk.js","sourcesContent":["const API_URL = 'https://ruddy-mail.glitch.me/api/gacha';\n\nexport default {\n    random() {\n\t//return fetch(API_URL).then(response => response.json());\n\treturn \"../image/test.png\"\n    }\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport gifApi from \"../api/gif\";\n\nconst initialState = {\n    url: \"\",\n    loading: false,\n    error: false\n};\n\nconst slice = createSlice({\n\tname: \"gif\",\n\tinitialState,\n\treducers: {\n\t    fetchStart: state => {\n\t\treturn Object.assign({}, state, { url: \"\", loading: true });\n\t    },\n\t    fetchSucceed: (state, action) => {\n\t\treturn Object.assign({}, state, { url: action.payload, loading: false });\n\t    },\n\t    fetchFaild: (state, action) => {\n\t\tconsole.error(action.payload);\n\t\treturn Object.assign({}, state, { loading: false, error: true });\n\t    },\n\t    clear: () => {\n\t\treturn { url: \"\", loading: false, error: false };\n\t    }\n\t}\n    });\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { clear } = slice.actions;\n\n// Async task\nexport function fetchAsync() {\n    return async function(dispatch) {\n\tdispatch(slice.actions.fetchStart());\n\n\ttry {\n\t    const response = await gifApi.random();\n\t    dispatch(slice.actions.fetchSucceed(response.url));\n\t} catch (err) {\n\t    dispatch(slice.actions.fetchFaild(err));\n\t}\n    };\n}\n","import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport gifReducer from \"./gif\";\n\nconst reducer = combineReducers({\n\tgif: gifReducer\n    });\n\nconst store = configureStore({ reducer });\n\nexport default store;\n","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAsync, clear } from \"../stores/gif\";\n\nfunction VendingMachine() {\n    const imageUrl = useSelector(state => state.gif.url);\n    const loading = useSelector(state => state.gif.loading);\n    const error = useSelector(state => state.gif.error);\n\n    const dispatch = useDispatch();\n\n    return (\n    <div>\n      <h1 className=\"title\">猫GIFガチャ</h1>\n    <Gif {...{ imageUrl, loading, error }} />\n      <hr/>\n      <div className=\"buttons\">\n        <button\n          className=\"button is-primary\"\n    onClick={() => dispatch(fetchAsync())}\n        >Play</button>\n        <button\n          className=\"button\"\n    onClick={() => dispatch(clear())}\n        >Clear</button>\n      </div>\n    </div>\n\t    );\n}\n\nfunction Gif({ imageUrl, loading, error }) {\n    if (error) {\n\treturn <p className=\"notification is-danger\">Error!!</p>;\n    }\n\n    if (loading) {\n\treturn <p className=\"notification is-info\">Loading...</p>;\n    }\n\n    if (!imageUrl) {\n\treturn <p className=\"notification\">Welcome!</p>;\n    }\n\n    return (\n    <figure>\n    <img src={imageUrl} alt=\"\" />\n      <figcaption>\n        GIFs by <a href=\"https://giphy.com/\">GIPHY</a>\n      </figcaption>\n    </figure>\n\t    );\n}\n\nexport default VendingMachine;\n","import React from \"react\";\nimport VendingMachine from \"./components/VendingMachine\";\n\nfunction App() {\n    return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <VendingMachine />\n      </div>\n    </div>\n\t    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./stores/\";\nimport \"bulma/css/bulma.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t\t<Provider store={store}>\n    <App />\n\t\t</Provider>,\n  rootElement\n\t\t);\n"],"sourceRoot":""}